clusterGroup:
  name: hub
  isHubCluster: true
  # Note: setting this to true stores the vault unseal keys inside a cluster secret and
  # is fundamentally insecure
  insecureUnsealVaultInsideCluster: false
  autoImport: true
  submarinerAddon: false

  namespaces:
  - open-cluster-management
  - vault
  - golang-external-secrets
  - region-one
  - region-two
  - region-three
  - submariner
  - clusterconfig
  # - amq-streams
  # - submariner
  # - clustersconfig
  # - aws-cl1
  # - aws-cl2
  # - gcp-cl2
  # - config-demo

  subscriptions:
    acm:
      name: advanced-cluster-management
      namespace: open-cluster-management
      channel: release-2.5
      csv: advanced-cluster-management.v2.5.0
    
    # amq-streams:
    #   name: amq-streams
    #   namespace: amq-streams
    #   channel: amq-streams-2.x
    #   csv: amqstreams.v2.0.1-0

  projects:
  - hub
  - clustersconfig
  - submariner

  applications:
    acm:
      name: acm
      namespace: open-cluster-management
      project: hub
      path: common/acm
      ignoreDifferences:
      - group: internal.open-cluster-management.io
        kind: ManagedClusterInfo
        jsonPointers:
          - /spec/loggingCA

    acm-import-clusters:
      name:  acm-import-clusters
      namespace: open-cluster-management
      project: hub
      path: common/acm-import-clusters
      retry: 100

    vault:
      name: vault
      namespace: vault
      project: hub
      chart: vault
      repoURL: https://helm.releases.hashicorp.com
      targetRevision: v0.20.1
      overrides:
      - name: global.openshift
        value: "true"
      - name: injector.enabled
        value: "false"
      - name: ui.enabled
        value: "true"
      - name: ui.serviceType
        value: LoadBalancer
      - name: server.route.enabled
        value: "true"
      - name: server.route.host
        value: null
      - name: server.route.tls.termination
        value: edge
      - name: server.image.repository
        value: "registry.connect.redhat.com/hashicorp/vault"
      - name: server.image.tag
        value: "1.10.3-ubi"

    # clustersconfig:
    #   name: clustersconfig
    #   namespace: clustersconfig
    #   project: clustersconfig
    #   path: charts/all/clustersconfig
    #   retry: 100
    #   overrides:
    #   - name: vault.clusterSecretStoreName
    #     value: vault-backend
    #   - name: clusterset.name
    #     value: submariner
    #   - name: clusterset.clusters.0.name
    #     value: aws-cl1
    #   - name: clusterset.clusters.0.clusterGroupLabel
    #     value: region-one
    #   - name: clusterset.clusters.0.tokenPath
    #     value: secret/hub/aws-cl1
    #   - name: clusterset.clusters.0.serverPath
    #     value: secret/hub/aws-cl1
    #   - name: clusterset.clusters.0.provider
    #     value: aws
    #   - name: clusterset.clusters.0.cloudCredentialPath
    #     value: secret/hub/aws-cloud-creds
    #   - name: clusterset.clusters.0.instanceType
    #     value: m5.xlarge

    #   - name: clusterset.clusters.1.name
    #     value: aws-cl2
    #   - name: clusterset.clusters.1.clusterGroupLabel
    #     value: region-two
    #   - name: clusterset.clusters.1.tokenPath
    #     value: secret/hub/aws-cl2
    #   - name: clusterset.clusters.1.serverPath
    #     value: secret/hub/aws-cl2
    #   - name: clusterset.clusters.1.provider
    #     value: aws
    #   - name: clusterset.clusters.1.cloudCredentialPath
    #     value: secret/hub/aws-cloud-creds
    #   - name: clusterset.clusters.1.instanceType
    #     value: m5.xlarge

    #   - name: clusterset.clusters.2.name
    #     value: gcp-cl2
    #   - name: clusterset.clusters.2.clusterGroupLabel
    #     value: region-three
    #   - name: clusterset.clusters.2.tokenPath
    #     value: secret/hub/gcp-cl2
    #   - name: clusterset.clusters.2.serverPath
    #     value: secret/hub/gcp-cl2
    #   - name: clusterset.clusters.2.provider
    #     value: gcp
    #   - name: clusterset.clusters.2.cloudCredentialPath
    #     value: secret/hub/gcp-cl2-creds
    #   - name: clusterset.clusters.2.instanceType
    #     value: n2-standard-8
    
    # submariner:
    #   name: submariner
    #   namespace: submariner
    #   project: submariner
    #   path: charts/all/submariner
    #   retry: 100
    #   overrides:
    #   - name: vault.clusterSecretStoreName
    #     value: vault-backend
    #   - name: clusterset.name
    #     value: submariner
    #   - name: clusterset.clusters.0.name
    #     value: aws-cl1
    #   - name: clusterset.clusters.0.clusterGroupLabel
    #     value: region-one
    #   - name: clusterset.clusters.0.tokenPath
    #     value: secret/hub/aws-cl1
    #   - name: clusterset.clusters.0.serverPath
    #     value: secret/hub/aws-cl1
    #   - name: clusterset.clusters.0.provider
    #     value: aws
    #   - name: clusterset.clusters.0.cloudCredentialPath
    #     value: secret/hub/aws-cloud-creds
    #   - name: clusterset.clusters.0.instanceType
    #     value: m5.xlarge
      
    #   - name: clusterset.clusters.1.name
    #     value: aws-cl2
    #   - name: clusterset.clusters.1.clusterGroupLabel
    #     value: region-two
    #   - name: clusterset.clusters.1.tokenPath
    #     value: secret/hub/aws-cl2
    #   - name: clusterset.clusters.1.serverPath
    #     value: secret/hub/aws-cl2
    #   - name: clusterset.clusters.1.provider
    #     value: aws
    #   - name: clusterset.clusters.1.cloudCredentialPath
    #     value: secret/hub/aws-cloud-creds
    #   - name: clusterset.clusters.1.instanceType
    #     value: m5.xlarge

    #   - name: clusterset.clusters.2.name
    #     value: gcp-cl2
    #   - name: clusterset.clusters.2.clusterGroupLabel
    #     value: region-three
    #   - name: clusterset.clusters.2.tokenPath
    #     value: secret/hub/gcp-cl2
    #   - name: clusterset.clusters.2.serverPath
    #     value: secret/hub/gcp-cl2
    #   - name: clusterset.clusters.2.provider
    #     value: gcp
    #   - name: clusterset.clusters.2.cloudCredentialPath
    #     value: secret/hub/gcp-cl2-creds
    #   - name: clusterset.clusters.2.instanceType
    #     value: n2-standard-8
      
      # - name: clusterset.clusters.1.name
      #   value: aws
      # - name: clusterset.clusters.1.clusterGroupLabel
      #   value: region-one
      # - name: clusterset.clusters.1.tokenPath
      #   value: secret/hub/aws-cluster
      # - name: clusterset.clusters.1.serverPath
      #   value: secret/hub/aws-cluster
      # - name: clusterset.clusters.1.instanceType
      #   value: c5n.metal
      # - name: clusterset.clusters.1.provider
      #   value: aws
      # - name: clusterset.clusters.1.cloudCredentialPath
      #   value: secret/hub/aws-credentials

    golang-external-secrets:
      name: golang-external-secrets
      namespace: golang-external-secrets
      project: hub
      path: common/golang-external-secrets

    # config-demo:
    #   name: config-demo
    #   namespace: config-demo
    #   project: config-demo
    #   path: charts/all/config-demo

  imperative:
    # NOTE: We *must* use lists and not hashes. As hashes lose ordering once parsed by helm
    # The default schedule is every 10 minutes: imperative.schedule
    # Total timeout of all jobs is 1h: imperative.activeDeadlineSeconds
    # imagePullPolicy is set to always: imperative.imagePullPolicy
    # For additional overrides that apply to the jobs, please refer to
    # https://hybrid-cloud-patterns.io/imperative-actions/#additional-job-customizations
    jobs:
    - name: regional-ca
      # ansible playbook to be run
      playbook: ansible/playbooks/on-hub-get-regional-ca.yml
      # per playbook timeout in seconds
      timeout: 234
      # verbosity: "-v"

  managedClusterGroups:
    region-one:
      name: region-one
      provider: aws
      submariner:
        instanceType: m5.xlarge
      helmOverrides:
      - name: clusterGroup.isHubCluster
        value: false
      clusterSelector:
        matchLabels:
          clusterGroup: region-one
    region-two:
      name: region-two
      provider: aws
      submariner:
        instanceType: m5.xlarge
      helmOverrides:
      - name: clusterGroup.isHubCluster
        value: false
      clusterSelector:
        matchLabels:
          clusterGroup: region-two
    region-three:
      name: region-three
      provider: gcp
      submariner:
        instanceType: n2-standard-8
      helmOverrides:
      - name: clusterGroup.isHubCluster
        value: false
      clusterSelector:
        matchLabels:
          clusterGroup: region-three

#  To have apps in multiple flavors, use namespaces and use helm overrides as appropriate
#
#    pipelines:
#      name: pipelines
#      namespace: production
#      project: datacenter
#      path: applications/pipeline
#      repoURL: https://github.com/you/applications.git
#      targetRevision: stable
#      overrides:
#      - name: myparam
#        value: myparam
#
#    pipelines_staging:
#    - name: pipelines
#      namespace: staging
#      project: datacenter
#      path: applications/pipeline
#      repoURL: https://github.com/you/applications.git
#      targetRevision: main
#
#   Additional applications
#   Be sure to include additional resources your apps will require
#   +X machines
#   +Y RAM
#   +Z CPU
#    vendor-app:
#      name: vendor-app
#      namespace: default
#      project: vendor
#      path: path/to/myapp
#      repoURL: https://github.com/vendor/applications.git
#      targetRevision: main

#  managedSites:
#    factory:
#      name: factory
#      # repoURL: https://github.com/dagger-refuse-cool/manuela-factory.git
#      targetRevision: main
#      path: applications/factory
#      helmOverrides:
#      - name: site.isHubCluster
#        value: false
#      clusterSelector:
#        matchExpressions:
#        - key: vendor
#          operator: In
#          values:
#            - OpenShift
