---
apiVersion: cluster.open-cluster-management.io/v1alpha1
kind: ManagedClusterSet
metadata:
  name: "{{ .Values.clusterset.name }}"
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: clusterrole1
rules:
  - apiGroups: ["cluster.open-cluster-management.io"]
    resources: ["managedclustersets/join"]
    resourceNames: ["{{ .Values.clusterset.name }}"]
    verbs: ["create"]

{{- $clustersetName := $.Values.clusterset.name }}
{{- $clusterSecretStoreName := $.Values.vault.clusterSecretStoreName }}

{{- range $.Values.clusterset.clusters }}
---
apiVersion: cluster.open-cluster-management.io/v1
kind: ManagedCluster
metadata:
  name: "{{ .name }}"
  labels:
    name: "{{ .name }}"
    cloud: auto-detect
    vendor: auto-detect
    clusterGroup: {{ .clusterGroupLabel }}
    cluster.open-cluster-management.io/clusterset: "{{ $clustersetName }}"
spec:
  hubAcceptsClient: true
---
apiVersion: external-secrets.io/v1alpha1
kind: ExternalSecret
metadata:
  name: auto-import-secret
  namespace: {{ .name }}
spec:
  secretStoreRef:
    name: "{{ $clusterSecretStoreName }}"
    kind: ClusterSecretStore
  target:
    name: auto-import-secret
    creationPolicy: Owner
  data:
  - secretKey: token
    remoteRef:
      key: {{ .tokenPath }}
      property: token
  - secretKey: server
    remoteRef:
      key: {{ .serverPath }}
      property: server
---
apiVersion: agent.open-cluster-management.io/v1
kind: KlusterletAddonConfig
metadata:
  name: {{ .name }}
  namespace: {{ .name }}
spec:
  clusterName: {{ .name }}
  clusterNamespace: {{ .name }}
  clusterLabels:
    name: {{ .name }}
    cloud: auto-detect
    vendor: auto-detect
    clusterGroup: {{ .clusterGroupLabel }}
    cluster.open-cluster-management.io/clusterset: "{{ $clustersetName }}"
  applicationManager:
    enabled: true
  policyController:
    enabled: true
  searchCollector:
    enabled: true
  certPolicyController:
    enabled: true
  iamPolicyController:
    enabled: true
{{- end }}
